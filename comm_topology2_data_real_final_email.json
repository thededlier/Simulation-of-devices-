[{"id":"63cbb27e.d9b20c","type":"tab","label":"Communication Flow","disabled":false,"info":""},{"id":"971a2b88.72eb48","type":"file in","z":"63cbb27e.d9b20c","name":"NeighbourTable.json","filename":"neighbour_table.json","format":"utf8","chunk":false,"sendError":false,"encoding":"none","x":380,"y":40,"wires":[["de63f455.85cbd8"]]},{"id":"de63f455.85cbd8","type":"json","z":"63cbb27e.d9b20c","name":"Convert JSON to object","property":"payload","action":"","pretty":false,"x":610,"y":40,"wires":[["10867a73.ac2916"]]},{"id":"cc90050c.076ca8","type":"inject","z":"63cbb27e.d9b20c","name":"Init Trigger","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"onceDelay":0.1,"x":130,"y":40,"wires":[["971a2b88.72eb48","96bc2d40.6d42d","e91e9117.d02bf","882cf40c.15c958","dc85619f.ffd1c"]]},{"id":"f04f3c41.15bb2","type":"function","z":"63cbb27e.d9b20c","name":"Node 1 - Oxygen","func":"context.set('id', 'node1');\n\nconst MIN_TEMP_THRESHOLD = 30;\nconst MAX_TEMP_THRESHOLD = 40;\n\nfunction updateTemperature(delta) {\n    var currentTemp = context.get('temperature');\n    if (!currentTemp) {\n        currentTemp = MIN_TEMP_THRESHOLD;\n    }\n\n    var newTemperature = currentTemp + delta;\n    if(newTemperature < MIN_TEMP_THRESHOLD){\n        newTemperature = MIN_TEMP_THRESHOLD;\n    }\n    if(newTemperature > MAX_TEMP_THRESHOLD){\n        newTemperature = MAX_TEMP_THRESHOLD;\n    }\n\n    context.set('temperature', newTemperature);\n}\n\nupdateTemperature(1);\n\nfunction getNextHopId() {\n    var neighborTable = flow.get(context.get('id'));\n\n    var neighborCosts = {};\n\n    Object.entries(neighborTable).forEach((item)=> {\n        neighborCosts[item[0]] = item[1].currentTemperature * item[1].sinkHops;\n    })\n\n    var nextHop = Object.keys(neighborCosts).reduce((result, nextKey) => {\n        return neighborCosts[result] <= neighborCosts[nextKey]? result: nextKey;\n    }, Object.keys(neighborTable)[0]);\n\n    return nextHop;\n}\n\nfunction getOxygenLevel(){\n    var oxygenData = flow.get('OxygenData');    \n    var currentIndex = context.get('currentIndex');\n    \n    if(currentIndex === undefined){\n        currentIndex = 0;\n    }else{\n        currentIndex += 1;\n        if(currentIndex >= oxygenData.length){\n            currentIndex = 0;\n        }\n    }\n    context.set('currentIndex', currentIndex);\n\n    var value = oxygenData[currentIndex].col1;\n    \n    var status = '';\n    if(value > 95) {\n        status = 'Oxygen - OK';\n    }else if(value > 91 && value < 94){\n        status = 'Oxygen - WARN';\n    }else{\n        status = 'Oxygen - DANGER'\n    }\n\n    return {\n        value,\n        status\n        \n    }\n}\n\nfunction getDataPayload(){\n    return {\n        from: context.get('id'),\n        dest: 'sink',\n        to: getNextHopId(),\n        path: [context.get('id')],\n        timestamp: Date.now(),\n        data: {\n            type: \"FORWARD_PAYLOAD\",\n            body: getOxygenLevel()\n        }\n    }\n}\n\nfunction updateNeighborTemperature(nodeId, temperature){\n    var neighborTable = flow.get(context.get('id'));\n    neighborTable[nodeId].currentTemperature = temperature;\n    flow.set(context.get('id'), neighborTable);\n}\n\nfunction getForwardPayload(payload) {\n    return {\n        from: payload.from,\n        dest: payload.dest,\n        to: getNextHopId(),\n        path: payload.path.concat(context.get('id')),\n        timestamp: payload.timestamp,\n        data: payload.data\n    }\n}\n\nfunction getForwardAckPayload(payload){\n    return {\n        from: context.get('id'),\n        to: payload.path[payload.path.length - 1],\n        data: {\n            type: 'FORWARD_ACK',\n            currentTemp: context.get('temperature')\n        }\n    }\n}\n\nvar message = [{}];\n\nif(msg.payload.from  === context.get('id')){\n    message = [{}];\n}\nif (msg.payload.data.type === 'FORWARD_PAYLOAD') {\n    message = [{\n        payload: getForwardPayload(msg.payload)\n    }, {\n        payload: getForwardAckPayload(msg.payload)\n    }]\n;\n} else if (msg.payload.data.type === 'ACTION_GENERATE_PAYLOAD') {\n    message = [{\n        payload: getDataPayload()\n    }]\n} else if(msg.payload.data.type === 'FORWARD_ACK'){\n    updateNeighborTemperature(msg.payload.from, msg.payload.data.currentTemp);\n    message = [{}]\n} else if(msg.payload.data.type === 'ACTION_DECREASE_TEMPERATURE'){\n    updateTemperature(-2);\n    message = [{}]\n}\n\nreturn [message];\n","outputs":1,"noerr":0,"x":650,"y":560,"wires":[["bb8c4aaf.831d38"]]},{"id":"bb8c4aaf.831d38","type":"mqtt out","z":"63cbb27e.d9b20c","name":"Channel1 Out","topic":"comm1","qos":"","retain":"","broker":"69ef6119.b18a2","x":920,"y":620,"wires":[]},{"id":"a7f083d8.bfb17","type":"mqtt in","z":"63cbb27e.d9b20c","name":"Channel1 In","topic":"comm1","qos":"2","datatype":"auto","broker":"69ef6119.b18a2","x":150,"y":640,"wires":[["52e9d954.e2eb28","51acac96.7a2f34"]]},{"id":"96bd8b15.ebdb58","type":"function","z":"63cbb27e.d9b20c","name":"Node 2 - Glucose Sensor","func":"context.set('id', 'node2');\n\nconst MIN_TEMP_THRESHOLD = 30;\nconst MAX_TEMP_THRESHOLD = 40;\n\nfunction updateTemperature(delta) {\n    var currentTemp = context.get('temperature');\n    if (!currentTemp) {\n        currentTemp = MIN_TEMP_THRESHOLD;\n    }\n\n    var newTemperature = currentTemp + delta;\n    if(newTemperature < MIN_TEMP_THRESHOLD){\n        newTemperature = MIN_TEMP_THRESHOLD;\n    }\n    if(newTemperature > MAX_TEMP_THRESHOLD){\n        newTemperature = MAX_TEMP_THRESHOLD;\n    }\n\n    context.set('temperature', newTemperature);\n}\n\nupdateTemperature(1);\n\nfunction getNextHopId() {\n    var neighborTable = flow.get(context.get('id'));\n\n    var neighborCosts = {};\n\n    Object.entries(neighborTable).forEach((item)=> {\n        neighborCosts[item[0]] = item[1].currentTemperature * item[1].sinkHops;\n    })\n\n    var nextHop = Object.keys(neighborCosts).reduce((result, nextKey) => {\n        return neighborCosts[result] <= neighborCosts[nextKey]? result: nextKey;\n    }, Object.keys(neighborTable)[0]);\n\n    return nextHop;\n}\n\nfunction getGlucoseStatus(){\n    var sugarData = flow.get('SugarData');    \n    var currentIndex = context.get('currentIndex');\n    \n    if(currentIndex === undefined){\n        currentIndex = 0;\n    }else{\n        currentIndex += 1;\n        if(currentIndex >= sugarData.length){\n            currentIndex = 0;\n        }\n    }\n    context.set('currentIndex', currentIndex);\n\n    var glucose = sugarData[currentIndex].col1;\n    var condition = '';\n    // Fasting Sugar Level\n    if (glucose > 140) {\n        condition = 'Sugar - High';\n    } else if (glucose < 70) {\n        condition = 'Sugar -  Low';\n    } else {\n        condition = 'Sugar - Under Control';\n    }\n    return {\n        value: glucose,\n        status: condition\n    };\n}\n\nfunction getDataPayload(){\n    return {\n        from: context.get('id'),\n        dest: 'sink',\n        to: getNextHopId(),\n        path: [context.get('id')],\n        timestamp: Date.now(),\n        data: {\n            type: \"FORWARD_PAYLOAD\",\n            body: getGlucoseStatus()\n        }\n    }\n}\n\nfunction updateNeighborTemperature(nodeId, temperature){\n    var neighborTable = flow.get(context.get('id'));\n    neighborTable[nodeId].currentTemperature = temperature;\n    flow.set(context.get('id'), neighborTable);\n}\n\nfunction getForwardPayload(payload) {\n    return {\n        from: payload.from,\n        dest: payload.dest,\n        to: getNextHopId(),\n        path: payload.path.concat(context.get('id')),\n        timestamp: payload.timestamp,\n        data: payload.data\n    }\n}\n\nfunction getForwardAckPayload(payload){\n    return {\n        from: context.get('id'),\n        to: payload.path[payload.path.length - 1],\n        data: {\n            type: 'FORWARD_ACK',\n            currentTemp: context.get('temperature')\n        }\n    }\n}\n\nvar message = [{}];\n\nif(msg.payload.from  === context.get('id')){\n    message = [{}];\n}\nif (msg.payload.data.type === 'FORWARD_PAYLOAD') {\n    message = [{\n        payload: getForwardPayload(msg.payload)\n    }, {\n        payload: getForwardAckPayload(msg.payload)\n    }]\n;\n} else if (msg.payload.data.type === 'ACTION_GENERATE_PAYLOAD') {\n    message = [{\n        payload: getDataPayload()\n    }]\n} else if(msg.payload.data.type === 'FORWARD_ACK'){\n    updateNeighborTemperature(msg.payload.from, msg.payload.data.currentTemp);\n    message = [{}]\n} else if(msg.payload.data.type === 'ACTION_DECREASE_TEMPERATURE'){\n    updateTemperature(-2);\n    message = [{}]\n}\n\nreturn [message];\n","outputs":1,"noerr":0,"x":670,"y":620,"wires":[["bb8c4aaf.831d38","7dace103.8365"]]},{"id":"39136e11.83e942","type":"function","z":"63cbb27e.d9b20c","name":"Node 3 - Pacemaker","func":"context.set('id', 'node3');\n\nconst MIN_TEMP_THRESHOLD = 30;\nconst MAX_TEMP_THRESHOLD = 40;\n\nfunction updateTemperature(delta) {\n    var currentTemp = context.get('temperature');\n    if (!currentTemp) {\n        currentTemp = MIN_TEMP_THRESHOLD;\n    }\n\n    var newTemperature = currentTemp + delta;\n    if(newTemperature < MIN_TEMP_THRESHOLD){\n        newTemperature = MIN_TEMP_THRESHOLD;\n    }\n    if(newTemperature > MAX_TEMP_THRESHOLD){\n        newTemperature = MAX_TEMP_THRESHOLD;\n    }\n\n    context.set('temperature', newTemperature);\n}\n\nupdateTemperature(1);\n\nfunction getNextHopId() {\n    var neighborTable = flow.get(context.get('id'));\n\n    var neighborCosts = {};\n\n    Object.entries(neighborTable).forEach((item)=> {\n        neighborCosts[item[0]] = item[1].currentTemperature * item[1].sinkHops;\n    })\n\n    var nextHop = Object.keys(neighborCosts).reduce((result, nextKey) => {\n        return neighborCosts[result] <= neighborCosts[nextKey]? result: nextKey;\n    }, Object.keys(neighborTable)[0]);\n\n    return nextHop;\n}\n\nfunction getHeartRate(){\n    var heartRateData = flow.get('heartRateData');    \n    var currentIndex = context.get('currentIndex');\n    \n    if(currentIndex === undefined){\n        currentIndex = 0;\n    }else{\n        currentIndex += 1;\n        if(currentIndex >= heartRateData.length){\n            currentIndex = 0;\n        }\n    }\n    context.set('currentIndex', currentIndex);\n\n    var heartRate = heartRateData[currentIndex].col1;\n    var status = '';\n\n    if(heartRate > 60 && heartRate < 110) {\n        status = 'Heart Rate - Under Control';\n    }\n    else if(heartRate < 60) {\n        status = 'Heart Rate - Low Heart Rate'\n    }\n    else if(heartRate > 110){\n        status = 'Heart Rate - High Heart Rate'\n    }\n    \n    return {\n        value: heartRate,\n        status\n    };\n}\n\n\nfunction getDataPayload(){\n    return {\n        from: context.get('id'),\n        dest: 'sink',\n        to: getNextHopId(),\n        path: [context.get('id')],\n        timestamp: Date.now(),\n        data: {\n            type: \"FORWARD_PAYLOAD\",\n            body: getHeartRate()\n        }\n    }\n}\n\nfunction updateNeighborTemperature(nodeId, temperature){\n    var neighborTable = flow.get(context.get('id'));\n    neighborTable[nodeId].currentTemperature = temperature;\n    flow.set(context.get('id'), neighborTable);\n}\n\n\nfunction getForwardPayload(payload) {\n    return {\n        from: payload.from,\n        dest: payload.dest,\n        to: getNextHopId(),\n        path: payload.path.concat(context.get('id')),\n        timestamp: payload.timestamp,\n        data: payload.data\n    }\n}\n\nfunction getForwardAckPayload(payload){\n    return {\n        from: context.get('id'),\n        to: payload.path[payload.path.length - 1],\n        data: {\n            type: 'FORWARD_ACK',\n            currentTemp: context.get('temperature')\n        }\n    }\n}\n\nvar message = [{}];\n\nif(msg.payload.from  === context.get('id')){\n    message = [{}];\n}\nif (msg.payload.data.type === 'FORWARD_PAYLOAD') {\n    message = [{\n        payload: getForwardPayload(msg.payload)\n    }, {\n        payload: getForwardAckPayload(msg.payload)\n    }]\n;\n} else if (msg.payload.data.type === 'ACTION_GENERATE_PAYLOAD') {\n    message = [{\n        payload: getDataPayload()\n    }]\n} else if(msg.payload.data.type === 'FORWARD_ACK'){\n    updateNeighborTemperature(msg.payload.from, msg.payload.data.currentTemp);\n    message = [{}]\n} else if(msg.payload.data.type === 'ACTION_DECREASE_TEMPERATURE'){\n    updateTemperature(-2);\n    message = [{}]\n}\n\nreturn [message];","outputs":1,"noerr":0,"x":660,"y":680,"wires":[["bb8c4aaf.831d38","7dace103.8365"]]},{"id":"b153da3e.497de8","type":"debug","z":"63cbb27e.d9b20c","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":370,"y":800,"wires":[]},{"id":"49a09584.772aac","type":"switch","z":"63cbb27e.d9b20c","name":"","property":"payload.to","propertyType":"msg","rules":[{"t":"eq","v":"node1","vt":"str"},{"t":"eq","v":"node2","vt":"str"},{"t":"eq","v":"node3","vt":"str"},{"t":"eq","v":"*","vt":"str"}],"checkall":"false","repair":false,"outputs":4,"x":410,"y":640,"wires":[["f04f3c41.15bb2"],["96bd8b15.ebdb58"],["39136e11.83e942"],["f04f3c41.15bb2","96bd8b15.ebdb58","39136e11.83e942"]]},{"id":"52e9d954.e2eb28","type":"json","z":"63cbb27e.d9b20c","name":"","property":"payload","action":"","pretty":false,"x":290,"y":640,"wires":[["49a09584.772aac"]]},{"id":"51acac96.7a2f34","type":"json","z":"63cbb27e.d9b20c","name":"","property":"payload","action":"","pretty":false,"x":260,"y":740,"wires":[["b153da3e.497de8"]]},{"id":"ad80bb5d.de1d98","type":"function","z":"63cbb27e.d9b20c","name":"Node 4 - Pedometer","func":"context.set('id', 'node4');\n\nconst MIN_TEMP_THRESHOLD = 30;\nconst MAX_TEMP_THRESHOLD = 40;\n\nfunction updateTemperature(delta) {\n    var currentTemp = context.get('temperature');\n    if (!currentTemp) {\n        currentTemp = MIN_TEMP_THRESHOLD;\n    }\n\n    var newTemperature = currentTemp + delta;\n    if(newTemperature < MIN_TEMP_THRESHOLD){\n        newTemperature = MIN_TEMP_THRESHOLD;\n    }\n    if(newTemperature > MAX_TEMP_THRESHOLD){\n        newTemperature = MAX_TEMP_THRESHOLD;\n    }\n\n    context.set('temperature', newTemperature);\n}\n\nupdateTemperature(1);\n\nfunction getNextHopId() {\n    var neighborTable = flow.get(context.get('id'));\n\n    var neighborCosts = {};\n\n    Object.entries(neighborTable).forEach((item)=> {\n        neighborCosts[item[0]] = item[1].currentTemperature * item[1].sinkHops;\n    })\n\n    var nextHop = Object.keys(neighborCosts).reduce((result, nextKey) => {\n        return neighborCosts[result] <= neighborCosts[nextKey]? result: nextKey;\n    }, Object.keys(neighborTable)[0]);\n\n    return nextHop;\n}\n\nfunction getPedoValue(){\n    var pedo  = (Math.random() * ((11000 - 300) + 1)) + 300;\n    var status = ''\n    if(pedo > 10000) {\n        status = 'Pedo - Congratulations you have met the daily target';\n    }\n    else if(pedo == 0)\n    {\n        status = 'Pedo - Hope you are well';\n    }\n    else\n    {\n        status = 'Pedo - Your daily target is 10000 steps'\n    }\n    \n    return {\n        value: pedo,\n        status: status\n    };\n}\n\n\nfunction getDataPayload(){\n    return {\n        from: context.get('id'),\n        dest: 'sink',\n        to: getNextHopId(),\n        path: [context.get('id')],\n        timestamp: Date.now(),\n        data: {\n            type: \"FORWARD_PAYLOAD\",\n            body: getPedoValue()\n        }\n    }\n}\n\nfunction updateNeighborTemperature(nodeId, temperature){\n    var neighborTable = flow.get(context.get('id'));\n    neighborTable[nodeId].currentTemperature = temperature;\n    flow.set(context.get('id'), neighborTable);\n}\n\nfunction getForwardPayload(payload) {\n    return {\n        from: payload.from,\n        dest: payload.dest,\n        to: getNextHopId(),\n        path: payload.path.concat(context.get('id')),\n        timestamp: payload.timestamp,\n        data: payload.data\n    }\n}\n\nfunction getForwardAckPayload(payload){\n    return {\n        from: context.get('id'),\n        to: payload.path[payload.path.length - 1],\n        data: {\n            type: 'FORWARD_ACK',\n            currentTemp: context.get('temperature')\n        }\n    }\n}\n\nvar message = [{}];\n\nif(msg.payload.from  === context.get('id')){\n    message = [{}];\n}\nif (msg.payload.data.type === 'FORWARD_PAYLOAD') {\n    message = [{\n        payload: getForwardPayload(msg.payload)\n    }, {\n        payload: getForwardAckPayload(msg.payload)\n    }]\n;\n} else if (msg.payload.data.type === 'ACTION_GENERATE_PAYLOAD') {\n    message = [{\n        payload: getDataPayload()\n    }]\n} else if(msg.payload.data.type === 'FORWARD_ACK'){\n    updateNeighborTemperature(msg.payload.from, msg.payload.data.currentTemp);\n    message = [{}]\n} else if(msg.payload.data.type === 'ACTION_DECREASE_TEMPERATURE'){\n    updateTemperature(-2);\n    message = [{}]\n}\n\nreturn [message];\n","outputs":1,"noerr":0,"x":700,"y":1000,"wires":[["7dace103.8365","994da54c.5c00b8"]]},{"id":"7dace103.8365","type":"mqtt out","z":"63cbb27e.d9b20c","name":"Channel2 Out","topic":"comm2","qos":"","retain":"","broker":"69ef6119.b18a2","x":940,"y":1040,"wires":[]},{"id":"faab7c55.13f08","type":"mqtt in","z":"63cbb27e.d9b20c","name":"Channel2 In","topic":"comm2","qos":"2","datatype":"auto","broker":"69ef6119.b18a2","x":170,"y":1040,"wires":[["3645bda7.466632","a701d013.f990d"]]},{"id":"24c70d48.5ce042","type":"function","z":"63cbb27e.d9b20c","name":"Node 5 - Blood Pressure","func":"context.set('id', 'node5');\n\nconst MIN_TEMP_THRESHOLD = 30;\nconst MAX_TEMP_THRESHOLD = 40;\n\nfunction updateTemperature(delta) {\n    var currentTemp = context.get('temperature');\n    if (!currentTemp) {\n        currentTemp = MIN_TEMP_THRESHOLD;\n    }\n\n    var newTemperature = currentTemp + delta;\n    if(newTemperature < MIN_TEMP_THRESHOLD){\n        newTemperature = MIN_TEMP_THRESHOLD;\n    }\n    if(newTemperature > MAX_TEMP_THRESHOLD){\n        newTemperature = MAX_TEMP_THRESHOLD;\n    }\n\n    context.set('temperature', newTemperature);\n}\n\nupdateTemperature(1);\n\nfunction getNextHopId() {\n    var neighborTable = flow.get(context.get('id'));\n\n    var neighborCosts = {};\n\n    Object.entries(neighborTable).forEach((item)=> {\n        neighborCosts[item[0]] = item[1].currentTemperature * item[1].sinkHops;\n    })\n\n    var nextHop = Object.keys(neighborCosts).reduce((result, nextKey) => {\n        return neighborCosts[result] <= neighborCosts[nextKey]? result: nextKey;\n    }, Object.keys(neighborTable)[0]);\n\n    return nextHop;\n}\n\nfunction getBPValue(){\n    var bpData = flow.get('bloodPressureData');    \n    var currentIndex = context.get('currentIndex');\n    \n    if(currentIndex === undefined){\n        currentIndex = 0;\n    }else{\n        currentIndex += 1;\n        if(currentIndex >= bpData.length){\n            currentIndex = 0;\n        }\n    }\n    context.set('currentIndex', currentIndex);\n    var bp  = bpData[currentIndex].col1;\n    var status = '';\n    if(bp < 120)\n    {\n        status = 'Blood Pressure - Optimal Blood Pressure';\n    }\n    else if(bp > 120 && bp < 140)\n    {\n        status = 'Blood Pressure - Normal Blood Pressure';\n    }\n    else\n    {\n        status = 'Blood Pressure - High Blood Pressure';\n    }\n    \n    return {\n        value: bp,\n        status\n    };\n}\n\n\nfunction getDataPayload(){\n    return {\n        from: context.get('id'),\n        dest: 'sink',\n        to: getNextHopId(),\n        path: [context.get('id')],\n        timestamp: Date.now(),\n        data: {\n            type: \"FORWARD_PAYLOAD\",\n            body: getBPValue()\n        }\n    }\n}\n\nfunction updateNeighborTemperature(nodeId, temperature){\n    var neighborTable = flow.get(context.get('id'));\n    neighborTable[nodeId].currentTemperature = temperature;\n    flow.set(context.get('id'), neighborTable);\n}\n\nfunction getForwardPayload(payload) {\n    return {\n        from: payload.from,\n        dest: payload.dest,\n        to: getNextHopId(),\n        path: payload.path.concat(context.get('id')),\n        timestamp: payload.timestamp,\n        data: payload.data\n    }\n}\n\nfunction getForwardAckPayload(payload){\n    return {\n        from: context.get('id'),\n        to: payload.path[payload.path.length - 1],\n        data: {\n            type: 'FORWARD_ACK',\n            currentTemp: context.get('temperature')\n        }\n    }\n}\n\nvar message = [{}];\n\nif(msg.payload.from  === context.get('id')){\n    message = [{}];\n}\nif (msg.payload.data.type === 'FORWARD_PAYLOAD') {\n    message = [{\n        payload: getForwardPayload(msg.payload)\n    }, {\n        payload: getForwardAckPayload(msg.payload)\n    }]\n;\n} else if (msg.payload.data.type === 'ACTION_GENERATE_PAYLOAD') {\n    message = [{\n        payload: getDataPayload()\n    }]\n} else if(msg.payload.data.type === 'FORWARD_ACK'){\n    updateNeighborTemperature(msg.payload.from, msg.payload.data.currentTemp);\n    message = [{}]\n} else if(msg.payload.data.type === 'ACTION_DECREASE_TEMPERATURE'){\n    updateTemperature(-2);\n    message = [{}]\n}\n\nreturn [message];","outputs":1,"noerr":0,"x":710,"y":1080,"wires":[["7dace103.8365","994da54c.5c00b8"]]},{"id":"7defe947.89fee8","type":"debug","z":"63cbb27e.d9b20c","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":410,"y":1220,"wires":[]},{"id":"98947383.e0e1a","type":"switch","z":"63cbb27e.d9b20c","name":"","property":"payload.to","propertyType":"msg","rules":[{"t":"eq","v":"node2","vt":"str"},{"t":"eq","v":"node3","vt":"str"},{"t":"eq","v":"node4","vt":"str"},{"t":"eq","v":"node5","vt":"str"},{"t":"eq","v":"*","vt":"str"}],"checkall":"false","repair":false,"outputs":5,"x":450,"y":1040,"wires":[["96bd8b15.ebdb58"],["39136e11.83e942"],["ad80bb5d.de1d98"],["24c70d48.5ce042"],["ad80bb5d.de1d98","24c70d48.5ce042","39136e11.83e942","96bd8b15.ebdb58"]]},{"id":"3645bda7.466632","type":"json","z":"63cbb27e.d9b20c","name":"","property":"payload","action":"","pretty":false,"x":310,"y":1040,"wires":[["98947383.e0e1a"]]},{"id":"a701d013.f990d","type":"json","z":"63cbb27e.d9b20c","name":"","property":"payload","action":"","pretty":false,"x":280,"y":1140,"wires":[["7defe947.89fee8"]]},{"id":"9bb6cc16.4a1b8","type":"function","z":"63cbb27e.d9b20c","name":"Node 6 - Sink","func":"context.set('id', 'node6');\n\nreturn msg;","outputs":1,"noerr":0,"x":700,"y":1360,"wires":[["6b1d647e.e447bc","887a19bb.4e9ad8","45a7e672.e3b638"]]},{"id":"994da54c.5c00b8","type":"mqtt out","z":"63cbb27e.d9b20c","name":"Channel3 Out","topic":"comm3","qos":"","retain":"","broker":"69ef6119.b18a2","x":960,"y":1360,"wires":[]},{"id":"e7dad3ca.5b9cc","type":"mqtt in","z":"63cbb27e.d9b20c","name":"Channel3 In","topic":"comm3","qos":"2","datatype":"auto","broker":"69ef6119.b18a2","x":190,"y":1360,"wires":[["6244473b.6a45b8","77dfa0a5.0d175"]]},{"id":"b8fbf38d.2079","type":"debug","z":"63cbb27e.d9b20c","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":450,"y":1460,"wires":[]},{"id":"47d98e32.a92a","type":"switch","z":"63cbb27e.d9b20c","name":"","property":"payload.to","propertyType":"msg","rules":[{"t":"eq","v":"node6","vt":"str"},{"t":"eq","v":"node4","vt":"str"},{"t":"eq","v":"node5","vt":"str"},{"t":"eq","v":"*","vt":"str"}],"checkall":"false","repair":false,"outputs":4,"x":470,"y":1360,"wires":[["9bb6cc16.4a1b8"],["ad80bb5d.de1d98"],["24c70d48.5ce042"],["9bb6cc16.4a1b8","24c70d48.5ce042","ad80bb5d.de1d98"]]},{"id":"6244473b.6a45b8","type":"json","z":"63cbb27e.d9b20c","name":"","property":"payload","action":"","pretty":false,"x":330,"y":1360,"wires":[["47d98e32.a92a"]]},{"id":"77dfa0a5.0d175","type":"json","z":"63cbb27e.d9b20c","name":"","property":"payload","action":"","pretty":false,"x":300,"y":1460,"wires":[["b8fbf38d.2079"]]},{"id":"4eba74b6.f4797c","type":"inject","z":"63cbb27e.d9b20c","name":"Every half Second","topic":"","payload":"","payloadType":"date","repeat":"0.5","crontab":"","once":false,"onceDelay":"0.5","x":150,"y":300,"wires":[["1a808848.b00158"]]},{"id":"1a808848.b00158","type":"function","z":"63cbb27e.d9b20c","name":"Action Genearte Payload","func":"\nreturn {\n    payload: {\n        data: {\n            type: 'ACTION_GENERATE_PAYLOAD'\n        }\n    }\n};","outputs":1,"noerr":0,"x":390,"y":300,"wires":[["39136e11.83e942"]]},{"id":"6b1d647e.e447bc","type":"debug","z":"63cbb27e.d9b20c","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":790,"y":1480,"wires":[]},{"id":"c5913168.5439d","type":"inject","z":"63cbb27e.d9b20c","name":"Every 2 Seconds","topic":"","payload":"","payloadType":"date","repeat":"2","crontab":"","once":false,"onceDelay":0.1,"x":150,"y":340,"wires":[["26306b12.52a274"]]},{"id":"26306b12.52a274","type":"function","z":"63cbb27e.d9b20c","name":"Action Genearte Payload","func":"\nreturn {\n    payload: {\n        data: {\n            type: 'ACTION_GENERATE_PAYLOAD'\n        }\n    }\n};","outputs":1,"noerr":0,"x":390,"y":340,"wires":[["24c70d48.5ce042"]]},{"id":"f76d8229.a1e59","type":"inject","z":"63cbb27e.d9b20c","name":"Every 4 Seconds","topic":"","payload":"","payloadType":"date","repeat":"4","crontab":"","once":false,"onceDelay":0.1,"x":150,"y":380,"wires":[["25aadbea.c909a4"]]},{"id":"25aadbea.c909a4","type":"function","z":"63cbb27e.d9b20c","name":"Action Genearte Payload","func":"\nreturn {\n    payload: {\n        data: {\n            type: 'ACTION_GENERATE_PAYLOAD'\n        }\n    }\n};","outputs":1,"noerr":0,"x":390,"y":380,"wires":[["f04f3c41.15bb2"]]},{"id":"8c4172bd.8042b","type":"inject","z":"63cbb27e.d9b20c","name":"Every 6 Seconds","topic":"","payload":"","payloadType":"date","repeat":"6","crontab":"","once":false,"onceDelay":0.1,"x":150,"y":420,"wires":[["28666b03.f2c694"]]},{"id":"28666b03.f2c694","type":"function","z":"63cbb27e.d9b20c","name":"Action Genearte Payload","func":"\nreturn {\n    payload: {\n        data: {\n            type: 'ACTION_GENERATE_PAYLOAD'\n        }\n    }\n};","outputs":1,"noerr":0,"x":390,"y":420,"wires":[["ad80bb5d.de1d98"]]},{"id":"79f03bbc.34eff4","type":"inject","z":"63cbb27e.d9b20c","name":"Every 12 Seconds","topic":"","payload":"","payloadType":"date","repeat":"12","crontab":"","once":false,"onceDelay":0.1,"x":150,"y":460,"wires":[["2ce182fb.c3139e"]]},{"id":"2ce182fb.c3139e","type":"function","z":"63cbb27e.d9b20c","name":"Action Genearte Payload","func":"\nreturn {\n    payload: {\n        data: {\n            type: 'ACTION_GENERATE_PAYLOAD'\n        }\n    }\n};","outputs":1,"noerr":0,"x":390,"y":460,"wires":[["96bd8b15.ebdb58"]]},{"id":"887a19bb.4e9ad8","type":"switch","z":"63cbb27e.d9b20c","name":"","property":"payload.from","propertyType":"msg","rules":[{"t":"eq","v":"node1","vt":"str"},{"t":"eq","v":"node2","vt":"str"},{"t":"eq","v":"node3","vt":"str"},{"t":"eq","v":"node4","vt":"str"},{"t":"eq","v":"node5","vt":"str"}],"checkall":"true","repair":false,"outputs":5,"x":110,"y":1700,"wires":[["41acefde.8174a","cbf3395b.05b678"],["9f64962a.d6a6c8","4dfbe204.03843c","e4f9710d.15de9"],["1b0ee107.813cdf"],["3efdb12f.bb185e","2b081d69.1ee322"],["4fb4438b.8a676c"]]},{"id":"27373108.32b91e","type":"ui_chart","z":"63cbb27e.d9b20c","name":"Oxygen Chart","group":"a2be05e9.7f71c8","order":2,"width":0,"height":0,"label":"","chartType":"line","legend":"false","xformat":"HH:mm:ss","interpolate":"linear","nodata":"","dot":true,"ymin":"85","ymax":"105","removeOlder":1,"removeOlderPoints":"","removeOlderUnit":"60","cutout":0,"useOneColor":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"useOldStyle":false,"outputs":1,"x":260,"y":1880,"wires":[[]]},{"id":"41acefde.8174a","type":"function","z":"63cbb27e.d9b20c","name":"Get Value","func":"\nreturn {\n    payload: msg.payload.data.body.value\n};","outputs":1,"noerr":0,"x":240,"y":1800,"wires":[["27373108.32b91e"]]},{"id":"cbf3395b.05b678","type":"ui_text","z":"63cbb27e.d9b20c","group":"a2be05e9.7f71c8","order":1,"width":0,"height":0,"name":"Oxygen Status","label":"","format":"{{msg.payload.data.body.status}}","layout":"row-center","x":440,"y":1880,"wires":[]},{"id":"9f64962a.d6a6c8","type":"function","z":"63cbb27e.d9b20c","name":"Get Value","func":"\nreturn {\n    payload: msg.payload.data.body.value\n};","outputs":1,"noerr":0,"x":660,"y":1760,"wires":[["992c419b.de5cc"]]},{"id":"992c419b.de5cc","type":"ui_chart","z":"63cbb27e.d9b20c","name":"Glucose Sensor","group":"65c182c4.3eed9c","order":2,"width":0,"height":0,"label":"","chartType":"line","legend":"false","xformat":"HH:mm:ss","interpolate":"linear","nodata":"Waiting for data...","dot":true,"ymin":"50","ymax":"190","removeOlder":1,"removeOlderPoints":"","removeOlderUnit":"60","cutout":0,"useOneColor":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"useOldStyle":false,"outputs":1,"x":660,"y":1880,"wires":[[]]},{"id":"4dfbe204.03843c","type":"ui_text","z":"63cbb27e.d9b20c","group":"65c182c4.3eed9c","order":1,"width":0,"height":0,"name":"Glucose Status","label":"","format":"{{msg.payload.data.body.status}}","layout":"row-center","x":850,"y":1880,"wires":[]},{"id":"1b0ee107.813cdf","type":"function","z":"63cbb27e.d9b20c","name":"Get Value","func":"\nreturn {\n    payload: msg.payload.data.body.value\n};","outputs":1,"noerr":0,"x":1020,"y":1780,"wires":[["b28e0fc9.43c15"]]},{"id":"b28e0fc9.43c15","type":"ui_gauge","z":"63cbb27e.d9b20c","name":"Pacemeter Gauge","group":"462326da.ad2aa8","order":1,"width":0,"height":0,"gtype":"gage","title":"Heart Rate","label":"HPM","format":"{{value}}","min":"10","max":"150","colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","x":1090,"y":1880,"wires":[]},{"id":"3efdb12f.bb185e","type":"function","z":"63cbb27e.d9b20c","name":"Get Value","func":"\nreturn {\n    payload: msg.payload.data.body.value\n};","outputs":1,"noerr":0,"x":160,"y":1960,"wires":[["a1d1165b.a40bf8"]]},{"id":"a1d1165b.a40bf8","type":"ui_chart","z":"63cbb27e.d9b20c","name":"Pedometer","group":"6387141a.83449c","order":2,"width":0,"height":0,"label":"","chartType":"line","legend":"false","xformat":"HH:mm:ss","interpolate":"linear","nodata":"Waiting for data...","dot":true,"ymin":"0","ymax":"11000","removeOlder":1,"removeOlderPoints":"","removeOlderUnit":"60","cutout":0,"useOneColor":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"useOldStyle":false,"outputs":1,"x":130,"y":2060,"wires":[[]]},{"id":"2b081d69.1ee322","type":"ui_text","z":"63cbb27e.d9b20c","group":"6387141a.83449c","order":1,"width":0,"height":0,"name":"Pedometer Status","label":"","format":"{{msg.payload.data.body.status}}","layout":"row-center","x":310,"y":2060,"wires":[]},{"id":"4fb4438b.8a676c","type":"function","z":"63cbb27e.d9b20c","name":"Get Value","func":"\nreturn {\n    payload: msg.payload.data.body.value\n};","outputs":1,"noerr":0,"x":540,"y":1960,"wires":[["dc81f770.9eb5b8"]]},{"id":"dc81f770.9eb5b8","type":"ui_gauge","z":"63cbb27e.d9b20c","name":"Blood Pressure","group":"c4a1c0cc.3b831","order":1,"width":0,"height":0,"gtype":"gage","title":"Blood Pressure","label":"mmHg","format":"{{value}}","min":"60","max":"140","colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","x":560,"y":2060,"wires":[]},{"id":"a0328066.6ec7e","type":"file","z":"63cbb27e.d9b20c","name":"sink_output.log","filename":"sink_output.log","appendNewline":true,"createDir":false,"overwriteFile":"false","encoding":"none","x":1140,"y":1460,"wires":[[]]},{"id":"45a7e672.e3b638","type":"json","z":"63cbb27e.d9b20c","name":"","property":"payload","action":"","pretty":false,"x":970,"y":1460,"wires":[["a0328066.6ec7e"]]},{"id":"10867a73.ac2916","type":"function","z":"63cbb27e.d9b20c","name":"Init Temperature","func":"var data = msg.payload;\n\nObject.entries(data).forEach(item => {\n    var nodeID = item[0];\n    var neighborTable = item[1];\n    Object.keys(neighborTable).forEach((neighborId) => {\n        var temperature = 30;\n        if(neighborId==='node6'){\n            temperature = 0;\n        }\n        neighborTable[neighborId].currentTemperature = temperature;\n    })\n    flow.set(nodeID, neighborTable);\n});\n\nreturn msg;","outputs":1,"noerr":0,"x":840,"y":40,"wires":[[]]},{"id":"c994a340.4b815","type":"inject","z":"63cbb27e.d9b20c","name":"Every Second","topic":"","payload":"","payloadType":"date","repeat":"1","crontab":"","once":false,"onceDelay":0.1,"x":140,"y":500,"wires":[["cf09637a.e9234"]]},{"id":"cf09637a.e9234","type":"function","z":"63cbb27e.d9b20c","name":"Action Update Tempreature","func":"return {\n    payload: {\n        data: {\n            type: 'ACTION_DECREASE_TEMPERATURE'\n        }\n    }\n};","outputs":1,"noerr":0,"x":380,"y":500,"wires":[["f04f3c41.15bb2","96bd8b15.ebdb58","39136e11.83e942","ad80bb5d.de1d98","24c70d48.5ce042"]]},{"id":"107b6e96.780f61","type":"csv","z":"63cbb27e.d9b20c","name":"CSV to Array","sep":",","hdrin":"","hdrout":"","multi":"mult","ret":"\\n","temp":"","skip":"0","strings":true,"x":530,"y":80,"wires":[["3855c62a.9fb5aa"]]},{"id":"96bc2d40.6d42d","type":"file in","z":"63cbb27e.d9b20c","name":"Heart Rate CSV","filename":"data/heart-rate-time-series.csv","format":"utf8","chunk":false,"sendError":false,"encoding":"none","x":360,"y":80,"wires":[["107b6e96.780f61"]]},{"id":"3855c62a.9fb5aa","type":"function","z":"63cbb27e.d9b20c","name":"Init heart reate data","func":"\nflow.set('heartRateData', msg.payload);\n\nreturn msg;","outputs":1,"noerr":0,"x":710,"y":80,"wires":[[]]},{"id":"e91e9117.d02bf","type":"file in","z":"63cbb27e.d9b20c","name":"Blood Pressure CSV","filename":"data/blood_pressure.csv","format":"utf8","chunk":false,"sendError":false,"encoding":"none","x":380,"y":120,"wires":[["9945be9a.26de2"]]},{"id":"9945be9a.26de2","type":"csv","z":"63cbb27e.d9b20c","name":"CSV to Array","sep":",","hdrin":false,"hdrout":"","multi":"mult","ret":"\\n","temp":"","skip":"0","strings":true,"x":570,"y":120,"wires":[["9767a43a.153188"]]},{"id":"9767a43a.153188","type":"function","z":"63cbb27e.d9b20c","name":"Init blood pressure data","func":"\nflow.set('bloodPressureData', msg.payload);\n\nreturn msg;","outputs":1,"noerr":0,"x":770,"y":120,"wires":[[]]},{"id":"882cf40c.15c958","type":"file in","z":"63cbb27e.d9b20c","name":"Oxygen CSV","filename":"data/oxygen.csv","format":"utf8","chunk":false,"sendError":false,"encoding":"none","x":350,"y":160,"wires":[["922d69be.3e09b8"]]},{"id":"922d69be.3e09b8","type":"csv","z":"63cbb27e.d9b20c","name":"CSV to Array","sep":",","hdrin":false,"hdrout":"","multi":"mult","ret":"\\n","temp":"","skip":"0","strings":true,"x":510,"y":160,"wires":[["d766f99a.f76b18"]]},{"id":"d766f99a.f76b18","type":"function","z":"63cbb27e.d9b20c","name":"Init Oxygen data","func":"\nflow.set('OxygenData', msg.payload);\n\nreturn msg;","outputs":1,"noerr":0,"x":700,"y":160,"wires":[[]]},{"id":"dc85619f.ffd1c","type":"file in","z":"63cbb27e.d9b20c","name":"Sugar CSV","filename":"data/Sugar.csv","format":"utf8","chunk":false,"sendError":false,"encoding":"none","x":350,"y":200,"wires":[["bf4fb791.668238"]]},{"id":"bf4fb791.668238","type":"csv","z":"63cbb27e.d9b20c","name":"CSV to Array","sep":",","hdrin":false,"hdrout":"","multi":"mult","ret":"\\n","temp":"","skip":"0","strings":true,"x":510,"y":200,"wires":[["c63e634c.22cab"]]},{"id":"c63e634c.22cab","type":"function","z":"63cbb27e.d9b20c","name":"Init Sugar data","func":"\nflow.set('SugarData', msg.payload);\n\nreturn msg;","outputs":1,"noerr":0,"x":700,"y":200,"wires":[[]]},{"id":"e4f9710d.15de9","type":"switch","z":"63cbb27e.d9b20c","name":"","property":"payload.data.body.status","propertyType":"msg","rules":[{"t":"eq","v":"Sugar -  Low","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":460,"y":1620,"wires":[["fbad2e17.51a17"]]},{"id":"fbad2e17.51a17","type":"http request","z":"63cbb27e.d9b20c","name":"","method":"GET","ret":"txt","paytoqs":false,"url":"https://ioh49i7qqb.execute-api.eu-west-1.amazonaws.com/default/ban-mailer?message=\"Alert! Suger Level Low\"&to=sdeshpan@tcd.ie","tls":"","persist":false,"proxy":"","authType":"","x":650,"y":1620,"wires":[[]]},{"id":"69ef6119.b18a2","type":"mqtt-broker","z":"","name":"Localhost","broker":"localhost","port":"1883","clientid":"","usetls":false,"compatmode":false,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"a2be05e9.7f71c8","type":"ui_group","z":"","name":"Oxygen Sensor","tab":"84aab56c.54db08","order":1,"disp":true,"width":"12","collapse":false},{"id":"65c182c4.3eed9c","type":"ui_group","z":"","name":"Glucose Sensor","tab":"84aab56c.54db08","order":3,"disp":true,"width":"12","collapse":false},{"id":"462326da.ad2aa8","type":"ui_group","z":"","name":"Pace Meter","tab":"84aab56c.54db08","order":4,"disp":true,"width":"6","collapse":false},{"id":"6387141a.83449c","type":"ui_group","z":"","name":"Pedometer","tab":"84aab56c.54db08","order":5,"disp":true,"width":"12","collapse":false},{"id":"c4a1c0cc.3b831","type":"ui_group","z":"","name":"Blood Pressure","tab":"84aab56c.54db08","order":2,"disp":true,"width":"6","collapse":false},{"id":"84aab56c.54db08","type":"ui_tab","z":"","name":"Home","icon":"dashboard","disabled":false,"hidden":false}]