[{"id":"6eec991.5f57968","type":"tab","label":"Discovery Flow","disabled":false,"info":""},{"id":"5e5a034f.baa31c","type":"inject","z":"6eec991.5f57968","name":"Start Discovery","topic":"","payload":"{\"to\":\"node1\",\"from\":\"trigger\",\"data\":{\"action\":\"start_discovery\"}}","payloadType":"json","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":260,"y":80,"wires":[["a6565ffe.1f1c7","dd8109ad.c92c18","779e1578.d4b2ac","9921dcf2.9ddac","82d84f10.2886a","474fcbe5.3765a4"]]},{"id":"a6565ffe.1f1c7","type":"function","z":"6eec991.5f57968","name":"Node 1","func":"context.set('id', 'node1');\n\nfunction getInitDiscoveryPayload() {\n    return {\n        from: context.get('id'),\n        to: '*',\n        data: {\n            type: 'INIT_DISCOVERY',\n            currentTemperature: 1,\n            sinkHops: context.get('sinkHops')\n        }\n    }\n}\n\nfunction getInitDiscoveryACKPayload(to) {\n    return {\n        from: context.get('id'),\n        to: to,\n        data: {\n            type: 'ACK_DISCOVERY',\n            currentTemperature: 1,\n            sinkHops: context.get('sinkHops')\n        }\n    }\n}\n\nfunction updateNeighborTable(payload) {\n    var neighborTable = flow.get(context.get('id')) || {};\n\n    neighborTable[payload.from] = {\n        currentTemperature: payload.data.currentTemperature,\n        sinkHops: payload.data.sinkHops\n    };\n\n    flow.set(context.get('id'), neighborTable);\n}\n\nfunction updateCurrentMinHop(newHops){\n    var currentHop = context.get('sinkHops');\n    var isUpdated = false;\n    if(currentHop === -1){\n        isUpdated = true;\n        context.set('sinkHops', newHops);\n    }else if(newHops < currentHop){\n        isUpdated = true;\n        context.set('sinkHops', newHops);\n    }\n    return isUpdated;\n}\n\nfunction getUpdateDistancePayload(){\n    return {\n        from: context.get('id'),\n        to: '*',\n        data: {\n            type: 'UPDATE_DISTANCE',\n            currentTemperature: 1,\n            sinkHops: context.get('sinkHops')\n        }\n    }\n}\n\nvar payload = {};\n\nif (msg.payload.from === context.get('id')) {\n    payload = {};\n} else if (msg.payload.data.action === 'start_discovery') {\n    payload = getInitDiscoveryPayload();\n    context.set('sinkHops', -1);\n} else if (msg.payload.data.type === 'INIT_DISCOVERY' && msg.payload.from !== context.get('id')) {\n    updateNeighborTable(msg.payload)\n    payload = getInitDiscoveryACKPayload(msg.payload.from);\n} else if (msg.payload.data.type === 'ACK_DISCOVERY') {\n    updateNeighborTable(msg.payload);\n\n    if(msg.payload.data.isSink){\n        var isUpdated = updateCurrentMinHop(1);\n        if(isUpdated){\n            payload = getUpdateDistancePayload();\n        }\n    }\n} else if(msg.payload.data.type === 'UPDATE_DISTANCE'){\n    updateNeighborTable(msg.payload);\n    var isUpdated = updateCurrentMinHop(msg.payload.data.sinkHops + 1);\n    if (isUpdated){\n        payload = getUpdateDistancePayload();\n    }\n}\n\nreturn {\n    payload\n};","outputs":1,"noerr":0,"x":580,"y":220,"wires":[["1d6b0bcb.b0eb94"]]},{"id":"1d6b0bcb.b0eb94","type":"mqtt out","z":"6eec991.5f57968","name":"Channel1 Out","topic":"channel1","qos":"","retain":"","broker":"69ef6119.b18a2","x":860,"y":320,"wires":[]},{"id":"1639515a.f2788f","type":"mqtt in","z":"6eec991.5f57968","name":"Channel1 In","topic":"channel1","qos":"2","datatype":"auto","broker":"69ef6119.b18a2","x":90,"y":340,"wires":[["3704d2a2.eadeae","d73e0030.210f8"]]},{"id":"dd8109ad.c92c18","type":"function","z":"6eec991.5f57968","name":"Node 2","func":"context.set('id', 'node2');\n\nfunction getInitDiscoveryPayload() {\n    return {\n        from: context.get('id'),\n        to: '*',\n        data: {\n            type: 'INIT_DISCOVERY',\n            currentTemperature: 2,\n            sinkHops: context.get('sinkHops')\n        }\n    }\n}\n\nfunction getInitDiscoveryACKPayload(to) {\n    return {\n        from: context.get('id'),\n        to: to,\n        data: {\n            type: 'ACK_DISCOVERY',\n            currentTemperature: 2,\n            sinkHops: context.get('sinkHops')\n        }\n    }\n}\n\nfunction updateNeighborTable(payload) {\n    var neighborTable = flow.get(context.get('id')) || {};\n\n    neighborTable[payload.from] = {\n        currentTemperature: payload.data.currentTemperature,\n        sinkHops: payload.data.sinkHops\n    };\n\n    flow.set(context.get('id'), neighborTable);\n}\n\nfunction updateCurrentMinHop(newHops){\n    var currentHop = context.get('sinkHops');\n    var isUpdated = false;\n    if(currentHop === -1){\n        isUpdated = true;\n        context.set('sinkHops', newHops);\n    }else if(newHops < currentHop){\n        isUpdated = true;\n        context.set('sinkHops', newHops);\n    }\n    return isUpdated;\n}\n\nfunction getUpdateDistancePayload(){\n    return {\n        from: context.get('id'),\n        to: '*',\n        data: {\n            type: 'UPDATE_DISTANCE',\n            currentTemperature: 2,\n            sinkHops: context.get('sinkHops')\n        }\n    }\n}\n\nvar payload = {};\n\nif (msg.payload.from === context.get('id')) {\n    payload = {};\n} else if (msg.payload.data.action === 'start_discovery') {\n    payload = getInitDiscoveryPayload();\n    context.set('sinkHops', -1);\n} else if (msg.payload.data.type === 'INIT_DISCOVERY' && msg.payload.from !== context.get('id')) {\n    updateNeighborTable(msg.payload)\n    payload = getInitDiscoveryACKPayload(msg.payload.from);\n} else if (msg.payload.data.type === 'ACK_DISCOVERY') {\n    updateNeighborTable(msg.payload);\n\n    if(msg.payload.data.isSink){\n        var isUpdated = updateCurrentMinHop(1);\n        if(isUpdated){\n            payload = getUpdateDistancePayload();\n        }\n    }\n} else if(msg.payload.data.type === 'UPDATE_DISTANCE'){\n    updateNeighborTable(msg.payload);\n    var isUpdated = updateCurrentMinHop(msg.payload.data.sinkHops + 1);\n    if (isUpdated){\n        payload = getUpdateDistancePayload();\n    }\n}\n\nreturn {\n    payload\n};","outputs":1,"noerr":0,"x":580,"y":320,"wires":[["1d6b0bcb.b0eb94","bed1e5e1.dd6a38"]]},{"id":"779e1578.d4b2ac","type":"function","z":"6eec991.5f57968","name":"Node 3","func":"context.set('id', 'node3');\n\nfunction getInitDiscoveryPayload() {\n    return {\n        from: context.get('id'),\n        to: '*',\n        data: {\n            type: 'INIT_DISCOVERY',\n            currentTemperature: 3,\n            sinkHops: context.get('sinkHops')\n        }\n    }\n}\n\nfunction getInitDiscoveryACKPayload(to) {\n    return {\n        from: context.get('id'),\n        to: to,\n        data: {\n            type: 'ACK_DISCOVERY',\n            currentTemperature: 3,\n            sinkHops: context.get('sinkHops')\n        }\n    }\n}\n\nfunction updateNeighborTable(payload) {\n    var neighborTable = flow.get(context.get('id')) || {};\n\n    neighborTable[payload.from] = {\n        currentTemperature: payload.data.currentTemperature,\n        sinkHops: payload.data.sinkHops\n    };\n\n    flow.set(context.get('id'), neighborTable);\n}\n\nfunction updateCurrentMinHop(newHops){\n    var currentHop = context.get('sinkHops');\n    var isUpdated = false;\n    if(currentHop === -1){\n        isUpdated = true;\n        context.set('sinkHops', newHops);\n    }else if(newHops < currentHop){\n        isUpdated = true;\n        context.set('sinkHops', newHops);\n    }\n    return isUpdated;\n}\n\nfunction getUpdateDistancePayload(){\n    return {\n        from: context.get('id'),\n        to: '*',\n        data: {\n            type: 'UPDATE_DISTANCE',\n            currentTemperature: 3,\n            sinkHops: context.get('sinkHops')\n        }\n    }\n}\n\nvar payload = {};\n\nif (msg.payload.from === context.get('id')) {\n    payload = {};\n} else if (msg.payload.data.action === 'start_discovery') {\n    payload = getInitDiscoveryPayload();\n    context.set('sinkHops', -1);\n} else if (msg.payload.data.type === 'INIT_DISCOVERY' && msg.payload.from !== context.get('id')) {\n    updateNeighborTable(msg.payload)\n    payload = getInitDiscoveryACKPayload(msg.payload.from);\n} else if (msg.payload.data.type === 'ACK_DISCOVERY') {\n    updateNeighborTable(msg.payload);\n\n    if(msg.payload.data.isSink){\n        var isUpdated = updateCurrentMinHop(1);\n        if(isUpdated){\n            payload = getUpdateDistancePayload();\n        }\n    }\n} else if(msg.payload.data.type === 'UPDATE_DISTANCE'){\n    updateNeighborTable(msg.payload);\n    var isUpdated = updateCurrentMinHop(msg.payload.data.sinkHops + 1);\n    if (isUpdated){\n        payload = getUpdateDistancePayload();\n    }\n}\n\nreturn {\n    payload\n};","outputs":1,"noerr":0,"x":580,"y":420,"wires":[["1d6b0bcb.b0eb94","bed1e5e1.dd6a38"]]},{"id":"91d28478.09c8d8","type":"debug","z":"6eec991.5f57968","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":330,"y":500,"wires":[]},{"id":"f7c69423.1d25b8","type":"switch","z":"6eec991.5f57968","name":"","property":"payload.to","propertyType":"msg","rules":[{"t":"eq","v":"node1","vt":"str"},{"t":"eq","v":"node2","vt":"str"},{"t":"eq","v":"node3","vt":"str"},{"t":"eq","v":"*","vt":"str"}],"checkall":"false","repair":false,"outputs":4,"x":350,"y":340,"wires":[["a6565ffe.1f1c7"],["dd8109ad.c92c18"],["779e1578.d4b2ac"],["a6565ffe.1f1c7","dd8109ad.c92c18","779e1578.d4b2ac"]]},{"id":"3704d2a2.eadeae","type":"json","z":"6eec991.5f57968","name":"","property":"payload","action":"","pretty":false,"x":230,"y":340,"wires":[["f7c69423.1d25b8"]]},{"id":"d73e0030.210f8","type":"json","z":"6eec991.5f57968","name":"","property":"payload","action":"","pretty":false,"x":200,"y":440,"wires":[["91d28478.09c8d8"]]},{"id":"9921dcf2.9ddac","type":"function","z":"6eec991.5f57968","name":"Node 4","func":"context.set('id', 'node4');\n\nfunction getInitDiscoveryPayload() {\n    return {\n        from: context.get('id'),\n        to: '*',\n        data: {\n            type: 'INIT_DISCOVERY',\n            currentTemperature: 4,\n            sinkHops: context.get('sinkHops')\n        }\n    }\n}\n\nfunction getInitDiscoveryACKPayload(to) {\n    return {\n        from: context.get('id'),\n        to: to,\n        data: {\n            type: 'ACK_DISCOVERY',\n            currentTemperature: 4,\n            sinkHops: context.get('sinkHops')\n        }\n    }\n}\n\nfunction updateNeighborTable(payload) {\n    var neighborTable = flow.get(context.get('id')) || {};\n\n    neighborTable[payload.from] = {\n        currentTemperature: payload.data.currentTemperature,\n        sinkHops: payload.data.sinkHops\n    };\n\n    flow.set(context.get('id'), neighborTable);\n}\n\nfunction updateCurrentMinHop(newHops){\n    var currentHop = context.get('sinkHops');\n    var isUpdated = false;\n    if(currentHop === -1){\n        isUpdated = true;\n        context.set('sinkHops', newHops);\n    }else if(newHops < currentHop){\n        isUpdated = true;\n        context.set('sinkHops', newHops);\n    }\n    return isUpdated;\n}\n\nfunction getUpdateDistancePayload(){\n    return {\n        from: context.get('id'),\n        to: '*',\n        data: {\n            type: 'UPDATE_DISTANCE',\n            currentTemperature: 4,\n            sinkHops: context.get('sinkHops')\n        }\n    }\n}\n\nvar payload = {};\n\nif (msg.payload.from === context.get('id')) {\n    payload = {};\n} else if (msg.payload.data.action === 'start_discovery') {\n    payload = getInitDiscoveryPayload();\n    context.set('sinkHops', -1);\n} else if (msg.payload.data.type === 'INIT_DISCOVERY' && msg.payload.from !== context.get('id')) {\n    updateNeighborTable(msg.payload)\n    payload = getInitDiscoveryACKPayload(msg.payload.from);\n} else if (msg.payload.data.type === 'ACK_DISCOVERY') {\n    updateNeighborTable(msg.payload);\n\n    if(msg.payload.data.isSink){\n        var isUpdated = updateCurrentMinHop(1);\n        if(isUpdated){\n            payload = getUpdateDistancePayload();\n        }\n    }\n} else if(msg.payload.data.type === 'UPDATE_DISTANCE'){\n    updateNeighborTable(msg.payload);\n    var isUpdated = updateCurrentMinHop(msg.payload.data.sinkHops + 1);\n    if (isUpdated){\n        payload = getUpdateDistancePayload();\n    }\n}\n\nreturn {\n    payload\n};","outputs":1,"noerr":0,"x":600,"y":720,"wires":[["bed1e5e1.dd6a38","61ce7d56.f00324"]]},{"id":"bed1e5e1.dd6a38","type":"mqtt out","z":"6eec991.5f57968","name":"Channel2 Out","topic":"channel2","qos":"","retain":"","broker":"69ef6119.b18a2","x":880,"y":760,"wires":[]},{"id":"bbdc0738.9c7fe8","type":"mqtt in","z":"6eec991.5f57968","name":"Channel2 In","topic":"channel2","qos":"2","datatype":"auto","broker":"69ef6119.b18a2","x":110,"y":760,"wires":[["38d9f0c2.6429c","8da93b06.23ae48"]]},{"id":"82d84f10.2886a","type":"function","z":"6eec991.5f57968","name":"Node 5","func":"context.set('id', 'node5');\n\nfunction getInitDiscoveryPayload() {\n    return {\n        from: context.get('id'),\n        to: '*',\n        data: {\n            type: 'INIT_DISCOVERY',\n            currentTemperature: 5,\n            sinkHops: context.get('sinkHops')\n        }\n    }\n}\n\nfunction getInitDiscoveryACKPayload(to) {\n    return {\n        from: context.get('id'),\n        to: to,\n        data: {\n            type: 'ACK_DISCOVERY',\n            currentTemperature: 5,\n            sinkHops: context.get('sinkHops')\n        }\n    }\n}\n\nfunction updateNeighborTable(payload) {\n    var neighborTable = flow.get(context.get('id')) || {};\n\n    neighborTable[payload.from] = {\n        currentTemperature: payload.data.currentTemperature,\n        sinkHops: payload.data.sinkHops\n    };\n\n    flow.set(context.get('id'), neighborTable);\n}\n\nfunction updateCurrentMinHop(newHops){\n    var currentHop = context.get('sinkHops');\n    var isUpdated = false;\n    if(currentHop === -1){\n        isUpdated = true;\n        context.set('sinkHops', newHops);\n    }else if(newHops < currentHop){\n        isUpdated = true;\n        context.set('sinkHops', newHops);\n    }\n    return isUpdated;\n}\n\nfunction getUpdateDistancePayload(){\n    return {\n        from: context.get('id'),\n        to: '*',\n        data: {\n            type: 'UPDATE_DISTANCE',\n            currentTemperature: 5,\n            sinkHops: context.get('sinkHops')\n        }\n    }\n}\n\nvar payload = {};\n\nif (msg.payload.from === context.get('id')) {\n    payload = {};\n} else if (msg.payload.data.action === 'start_discovery') {\n    payload = getInitDiscoveryPayload();\n    context.set('sinkHops', -1);\n} else if (msg.payload.data.type === 'INIT_DISCOVERY' && msg.payload.from !== context.get('id')) {\n    updateNeighborTable(msg.payload)\n    payload = getInitDiscoveryACKPayload(msg.payload.from);\n} else if (msg.payload.data.type === 'ACK_DISCOVERY') {\n    updateNeighborTable(msg.payload);\n\n    if(msg.payload.data.isSink){\n        var isUpdated = updateCurrentMinHop(1);\n        if(isUpdated){\n            payload = getUpdateDistancePayload();\n        }\n    }\n} else if(msg.payload.data.type === 'UPDATE_DISTANCE'){\n    updateNeighborTable(msg.payload);\n    var isUpdated = updateCurrentMinHop(msg.payload.data.sinkHops + 1);\n    if (isUpdated){\n        payload = getUpdateDistancePayload();\n    }\n}\n\nreturn {\n    payload\n};","outputs":1,"noerr":0,"x":600,"y":800,"wires":[["bed1e5e1.dd6a38","61ce7d56.f00324"]]},{"id":"6fbf3aae.071d34","type":"debug","z":"6eec991.5f57968","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":350,"y":940,"wires":[]},{"id":"37a867b6.672108","type":"switch","z":"6eec991.5f57968","name":"","property":"payload.to","propertyType":"msg","rules":[{"t":"eq","v":"node2","vt":"str"},{"t":"eq","v":"node3","vt":"str"},{"t":"eq","v":"node4","vt":"str"},{"t":"eq","v":"node5","vt":"str"},{"t":"eq","v":"*","vt":"str"}],"checkall":"false","repair":false,"outputs":5,"x":370,"y":760,"wires":[["dd8109ad.c92c18"],["779e1578.d4b2ac"],["9921dcf2.9ddac"],["82d84f10.2886a"],["9921dcf2.9ddac","82d84f10.2886a","779e1578.d4b2ac","dd8109ad.c92c18"]]},{"id":"38d9f0c2.6429c","type":"json","z":"6eec991.5f57968","name":"","property":"payload","action":"","pretty":false,"x":250,"y":760,"wires":[["37a867b6.672108"]]},{"id":"8da93b06.23ae48","type":"json","z":"6eec991.5f57968","name":"","property":"payload","action":"","pretty":false,"x":220,"y":860,"wires":[["6fbf3aae.071d34"]]},{"id":"474fcbe5.3765a4","type":"function","z":"6eec991.5f57968","name":"Node 6","func":"context.set('id', 'node6');\n\nfunction getInitDiscoveryPayload() {\n    return {\n        from: context.get('id'),\n        to: '*',\n        data: {\n            type: 'INIT_DISCOVERY',\n            currentTemperature: 6,\n            sinkHops: context.get('sinkHops')\n        }\n    }\n}\n\nfunction getInitDiscoveryACKPayload(to) {\n    return {\n        from: context.get('id'),\n        to: to,\n        data: {\n            type: 'ACK_DISCOVERY',\n            currentTemperature: 6,\n            sinkHops: context.get('sinkHops'),\n            isSink: true\n        }\n    }\n}\n\nfunction updateNeighborTable(payload) {\n    var neighborTable = flow.get(context.get('id')) || {};\n\n    neighborTable[payload.from] = {\n        currentTemperature: payload.data.currentTemperature,\n        sinkHops: payload.data.sinkHops\n    };\n\n    flow.set(context.get('id'), neighborTable);\n}\n\nfunction updateCurrentMinHop(newHops){\n    var currentHop = context.get('sinkHops');\n    var isUpdated = false;\n    if(currentHop === -1){\n        isUpdated = true;\n        context.set('sinkHops', newHops);\n    }else if(newHops < currentHop){\n        isUpdated = true;\n        context.set('sinkHops', newHops);\n    }\n    return isUpdated;\n}\n\nfunction getUpdateDistancePayload(){\n    return {\n        from: context.get('id'),\n        to: '*',\n        data: {\n            type: 'UPDATE_DISTANCE',\n            currentTemperature: 6,\n            sinkHops: context.get('sinkHops')\n        }\n    }\n}\n\nvar payload = {};\n\nif (msg.payload.from === context.get('id')) {\n    payload = {};\n} else if (msg.payload.data.action === 'start_discovery') {\n    payload = getInitDiscoveryPayload();\n    context.set('sinkHops', 0);\n} else if (msg.payload.data.type === 'INIT_DISCOVERY' && msg.payload.from !== context.get('id')) {\n    updateNeighborTable(msg.payload)\n    payload = getInitDiscoveryACKPayload(msg.payload.from);\n} else if (msg.payload.data.type === 'ACK_DISCOVERY') {\n    updateNeighborTable(msg.payload);\n\n    if(msg.payload.data.isSink){\n        var isUpdated = updateCurrentMinHop(1);\n        if(isUpdated){\n            payload = getUpdateDistancePayload();\n        }\n    }\n} else if(msg.payload.data.type === 'UPDATE_DISTANCE'){\n    updateNeighborTable(msg.payload);\n    var isUpdated = updateCurrentMinHop(msg.payload.data.sinkHops + 1);\n    if (isUpdated){\n        payload = getUpdateDistancePayload();\n    }\n}\n\nreturn {\n    payload\n};","outputs":1,"noerr":0,"x":620,"y":1080,"wires":[["61ce7d56.f00324"]]},{"id":"61ce7d56.f00324","type":"mqtt out","z":"6eec991.5f57968","name":"Channel3 Out","topic":"channel3","qos":"","retain":"","broker":"69ef6119.b18a2","x":900,"y":1080,"wires":[]},{"id":"6059e28e.5034dc","type":"mqtt in","z":"6eec991.5f57968","name":"Channel3 In","topic":"channel3","qos":"2","datatype":"auto","broker":"69ef6119.b18a2","x":130,"y":1080,"wires":[["2b28833e.e7781c","1483fdf2.911a82"]]},{"id":"73584ee6.2c4b8","type":"debug","z":"6eec991.5f57968","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":370,"y":1240,"wires":[]},{"id":"c779c7a9.294ae8","type":"switch","z":"6eec991.5f57968","name":"","property":"payload.to","propertyType":"msg","rules":[{"t":"eq","v":"node6","vt":"str"},{"t":"eq","v":"node4","vt":"str"},{"t":"eq","v":"node5","vt":"str"},{"t":"eq","v":"*","vt":"str"}],"checkall":"false","repair":false,"outputs":4,"x":410,"y":1080,"wires":[["474fcbe5.3765a4"],["9921dcf2.9ddac"],["82d84f10.2886a"],["474fcbe5.3765a4","82d84f10.2886a","9921dcf2.9ddac"]]},{"id":"2b28833e.e7781c","type":"json","z":"6eec991.5f57968","name":"","property":"payload","action":"","pretty":false,"x":270,"y":1080,"wires":[["c779c7a9.294ae8"]]},{"id":"1483fdf2.911a82","type":"json","z":"6eec991.5f57968","name":"","property":"payload","action":"","pretty":false,"x":240,"y":1180,"wires":[["73584ee6.2c4b8"]]},{"id":"640680.9e6ab98","type":"inject","z":"6eec991.5f57968","name":"Export Neighbour Table","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":180,"y":1440,"wires":[["24702662.0b3f0a"]]},{"id":"24702662.0b3f0a","type":"function","z":"6eec991.5f57968","name":"Export Neighbour Table","func":"const nodes = ['node1', 'node2', 'node3', 'node4', 'node5', 'node6'];\n\nconst payload = {};\n\nnodes.forEach((nodeId) => {\n    payload[nodeId] = flow.get(nodeId)\n})\n\nreturn {\n    payload\n}\n","outputs":1,"noerr":0,"x":450,"y":1440,"wires":[["84764141.40707"]]},{"id":"84764141.40707","type":"json","z":"6eec991.5f57968","name":"Convert to JSON","property":"payload","action":"","pretty":true,"x":710,"y":1440,"wires":[["28951b11.fdc304"]]},{"id":"28951b11.fdc304","type":"file","z":"6eec991.5f57968","name":"neighbour_table.json","filename":"neighbour_table.json","appendNewline":false,"createDir":false,"overwriteFile":"true","encoding":"none","x":960,"y":1440,"wires":[[]]},{"id":"69ef6119.b18a2","type":"mqtt-broker","z":"","name":"Localhost","broker":"localhost","port":"1883","clientid":"","usetls":false,"compatmode":false,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""}]